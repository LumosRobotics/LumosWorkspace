cmake_minimum_required(VERSION 3.14 FATAL_ERROR)

if(NOT Qt6_FOUND)
    message(STATUS "Qt6 not found, skipping repl_gui_modular")
    return()
endif()

# Module source files
set(MODULE_SOURCE_FILES 
    ../../modules/python_engine.cpp
    ../../modules/custom_title_bar.cpp
    ../../modules/settings_manager.cpp
    ../../modules/ui_theme_manager.cpp
    ../../modules/variables_panel.cpp
    ../../modules/repl_interface.cpp
    ../../modules/tcp_server.cpp
    ../../modules/debug_api.cpp
    ../../modules/layout_manager.cpp
    ../../modules/main_window.cpp
)

# Application source files
set(APP_SOURCE_FILES 
    main_modular.cpp 
)

# Create modular executable
add_executable(repl_gui_modular ${APP_SOURCE_FILES} ${MODULE_SOURCE_FILES})

# Qt6 setup
set_target_properties(repl_gui_modular PROPERTIES
    AUTOMOC ON
)

# Include directories
target_include_directories(repl_gui_modular PRIVATE
    ${CMAKE_SOURCE_DIR}/src/modules
    ${CMAKE_SOURCE_DIR}/third_party/cpython/Include
    ${CMAKE_SOURCE_DIR}/third_party/cpython
)

# Qt6 libraries
target_link_libraries(repl_gui_modular PRIVATE
    Qt6::Core
    Qt6::Widgets
    Qt6::Network
)

# Python library and required system libraries
find_library(INTL_LIB intl PATHS /opt/homebrew/lib /usr/local/lib)
if(INTL_LIB)
    target_link_libraries(repl_gui_modular PRIVATE 
        ${CMAKE_SOURCE_DIR}/third_party/cpython/libpython3.13.a
        ${INTL_LIB}
        dl
        util
        m
    )
else()
    # Fallback: try without intl library (some systems have it built-in)
    target_link_libraries(repl_gui_modular PRIVATE 
        ${CMAKE_SOURCE_DIR}/third_party/cpython/libpython3.13.a
        dl
        util
        m
    )
endif()

# Enable debug port if requested
if(ENABLE_DEBUG_PORT)
    add_definitions(-DENABLE_DEBUG_PORT)
endif()